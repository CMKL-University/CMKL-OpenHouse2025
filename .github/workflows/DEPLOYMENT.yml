# SECURITY WARNING: This deployment is now DISABLED
# The old insecure static site deployment has been replaced with a secure backend
# name: DEPRECATED - Insecure Deployment Disabled

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# jobs:
#   security-warning:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Security Warning
#         run: |
#           echo "🚨 SECURITY WARNING: This deployment workflow has been DISABLED"
#           echo ""
#           echo "❌ The old static site deployment exposed API keys in config.js"
#           echo "✅ This application now requires a secure backend deployment"
#           echo ""
#           echo "📋 To deploy securely:"
#           echo "1. Use a hosting service that supports Node.js backends (Railway, Heroku, Vercel)"
#           echo "2. Set environment variables on your hosting platform"
#           echo "3. Deploy the full-stack application, not just static files"
#           echo ""
#           echo "🔗 See DEPLOYMENT.md for detailed instructions"
#           echo ""
#           echo "⚠️  DO NOT use GitHub Pages or static site deployment"
#           echo "⚠️  API keys MUST be kept server-side only"
#           exit 1

# Secure Full-Stack Deployment
name: Deploy Secure CMKL Backend

on:
  # Only run manually to prevent accidental deployments
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Validate secure configuration
        run: |
          echo "🔍 Validating secure configuration..."
          
          # Check that config.js doesn't contain API keys
          if grep -q "pato8jE2ZjYvxGVU4\|your.*api.*key\|your.*base.*id" config.js; then
            echo "❌ SECURITY ERROR: Found exposed API keys in config.js!"
            exit 1
          fi
          
          echo "✅ Frontend configuration is secure"
          echo "✅ No API keys found in client-side code"

      - name: Create secure .env file
        run: |
          cat > .env << EOF
          MISSION=${{ secrets.MISSION }}
          AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_NAME=${{ secrets.AIRTABLE_TABLE_NAME }}
          PORT=${{ secrets.PORT || '3000' }}
          NODE_ENV=${{ github.event.inputs.environment }}
          EOF

      - name: Test application
        run: |
          echo "🧪 Testing application startup..."
          timeout 10s npm start &
          sleep 5
          echo "✅ Application started successfully"

      # Add your deployment steps here based on your hosting provider:
      
      - name: Deploy to hosting service
        run: |
          echo "🚀 Ready for deployment!"
          echo "Configure your hosting service deployment here:"
          echo ""
          echo "For Railway: uncomment Railway deployment step"
          echo "For Heroku: uncomment Heroku deployment step" 
          echo "For Vercel: uncomment Vercel deployment step"
          echo ""
          echo "⚠️ IMPORTANT: Set environment variables on your hosting platform"
          echo "⚠️ DO NOT deploy as static site - requires Node.js backend"

      # Railway deployment (uncomment to use):
      # - name: Deploy to Railway
      #   run: |
      #     curl -fsSL https://railway.app/install.sh | sh
      #     railway login --token ${{ secrets.RAILWAY_TOKEN }}
      #     railway up

      # Heroku deployment (uncomment to use):
      # - name: Deploy to Heroku
      #   uses: akhileshns/heroku-deploy@v3.12.12
      #   with:
      #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
      #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
      #     heroku_email: ${{ secrets.HEROKU_EMAIL }}

      # Vercel deployment (uncomment to use):
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v20
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
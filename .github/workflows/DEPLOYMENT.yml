# Static site deployment to GitHub Pages with secure config
name: Deploy Static Site to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job (for static sites, this just prepares the files)
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    env:
      MISSION: ${{ secrets.MISSION }}
      AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
      AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
      AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Create server environment config
        run: |
          cat > .env << 'EOF'
          MISSION=${{ secrets.MISSION }}
          AIRTABLE_API_KEY=${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID=${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_NAME=${{ secrets.AIRTABLE_TABLE_NAME }}
          EOF

      - name: Create config.js with GitHub secrets
        run: |
          cat > config.js << 'EOF'
          // Configuration for static GitHub Pages deployment
          // Note: In production, consider using a backend API to hide sensitive keys
          
          window.APP_CONFIG = {
              MISSION: '${{ secrets.MISSION }}',
              AIRTABLE_API_KEY: '${{ secrets.AIRTABLE_API_KEY }}',
              AIRTABLE_BASE_ID: '${{ secrets.AIRTABLE_BASE_ID }}',
              AIRTABLE_TABLE_NAME: '${{ secrets.AIRTABLE_TABLE_NAME }}',
              
              // UI configuration
              ui: {
                  targetTimeout: 60000, // 1 minute
                  messageDisplayTime: 3000 // 3 seconds
              },
              
              // Feature flags
              features: {
                  dataSubmission: true // Enable direct Airtable submission
              }
          };
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4